import{ah as l,bo as u,D as d,n as m,v as e,x as o,bl as r,O as n,bk as y,al as c,J as h,co as v}from"./main-D07jEvGH.js";import{g as a}from"./queryUtils-DRbNJ8EE.js";import{u as w,c as f,a as b,m as g,b as j}from"./FixedIntervalBinParameters-DgXL9p3Z.js";import{m as S,s as R}from"./Query-CUY6BtTx.js";import{p as T}from"./TimeExtent-CPjJdscH.js";import{p as $}from"./timeZoneUtils-DqRdsW6V.js";import"./preload-helper-ExcqyqRp.js";import"./projection-Dm4lMAiE.js";import"./normalizeUtils-DNUqLo6p.js";import"./utils-D6r5P7gT.js";import"./utils-YvsstqtW.js";import"./json-Wa8cmqdu.js";import"./NormalizationBinParametersMixin-DU0LGdd4.js";import"./Field-DrVvW_h_.js";import"./fieldType-CoIzguOf.js";const x=new l({asc:"ascending",desc:"descending"}),B={base:w,key:"type",typeMap:{"auto-interval":f,date:b,"fixed-boundaries":g,"fixed-interval":j}};let t=class extends u.ClonableMixin(d){constructor(i){super(i),this.binParameters=null,this.binOrder="ascending",this.cacheHint=void 0,this.datumTransformation=null,this.defaultSpatialReference=null,this.distance=void 0,this.geometry=null,this.lowerBoundaryAlias=null,this.outSpatialReference=null,this.outStatistics=null,this.returnDistinctValues=null,this.spatialRelationship="intersects",this.timeExtent=null,this.upperBoundaryAlias=null,this.units=null,this.where="1=1"}set outTimeZone(i){this._set("outTimeZone",i),i&&!$(i)&&m.getLogger(this).warn("#outTimeZone",`the parsed value '${i}' may not be a valid IANA time zone`)}};e([o({types:B,json:{name:"bin",write:!0}})],t.prototype,"binParameters",void 0),e([r(x)],t.prototype,"binOrder",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"cacheHint",void 0),e([o({json:{write:!0}})],t.prototype,"datumTransformation",void 0),e([o({type:n,json:{name:"defaultSR",write:!0}})],t.prototype,"defaultSpatialReference",void 0),e([o({type:Number,json:{write:{overridePolicy:i=>({enabled:i>0})}}})],t.prototype,"distance",void 0),e([o({types:y,json:{read:c,write:!0}})],t.prototype,"geometry",void 0),e([o({type:String,json:{write:!0}})],t.prototype,"lowerBoundaryAlias",void 0),e([o({type:n,json:{name:"outSR",write:!0}})],t.prototype,"outSpatialReference",void 0),e([o({type:[S],json:{write:{enabled:!0,overridePolicy(){return{enabled:this.outStatistics!=null&&this.outStatistics.length>0}}}}})],t.prototype,"outStatistics",void 0),e([o({value:null,json:{name:"outTimeReference",read:{reader:i=>i.ianaTimeZone},write:{writer:(i,s,p)=>{i&&(s[p]={ianaTimeZone:i})}}}})],t.prototype,"outTimeZone",null),e([o({type:Boolean,json:{write:!0}})],t.prototype,"returnDistinctValues",void 0),e([r(R,{name:"spatialRel"})],t.prototype,"spatialRelationship",void 0),e([o({type:T,json:{write:!0}})],t.prototype,"timeExtent",void 0),e([o({type:String,json:{write:!0}})],t.prototype,"upperBoundaryAlias",void 0),e([o({type:String,json:{read:a.read,write:{writer:a.write,overridePolicy(i){return{enabled:i!=null&&this.distance!=null}}}}})],t.prototype,"units",void 0),e([o({type:String,json:{write:!0}})],t.prototype,"where",void 0),t=e([h("esri.rest.support.AttributeBinsQuery")],t);const L=t;t.from=v(t);export{L as default};
